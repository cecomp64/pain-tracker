<%
  # Parameters
  # pain_points = filtered query
  # length = Argument to length for groupdate (nil if none)
  # min_date/max_date = Argument for filtering pie charts
  # options[:title] - Line chart title
  # optoins[:heading] - Size of headings

  options[:heading] ||= 3
  options[:title] ||= 'Total Pain'
  h = options[:heading]
%>

<div class="col-xs-12">
  <h<%=h%>><%=options[:title]%></h<%=h%>>
  <%
    pain_data = period ? pain_points.send("group_by_#{period.to_s.singularize}", :date, last: length,
                                  default_value: nil).sum(:magnitude).reject { |_, v| v.nil? } : pain_points.group(:date).sum(:magnitude)

    activity_data = period ? pain_points.where.not(activity: nil).send("group_by_#{period.to_s.singularize}", :date, last: length,
                                                               default_value: nil).count.reject{|_,v| v.nil?} : []
  %>


  <%= chart_or_banner pain_data, line_chart([{name: 'Cumulative Pain', data: pain_data, yAxis: 0}, {name: 'Number of Activities', data: activity_data, yAxis: 1}],
                                            library: PainTracker::LINE_CHART_DUAL_AXIS, height: '400px') %>
</div>

<% [:activity, :location].each do |term| %>
    <div class="col-sm-6 col-xs-12">
      <h<%=h%>>Pain Per <%=term.to_s.titleize%></h<%=h%>>
      <% term_data = pain_points.filter(max_date: max_date, min_date: min_date).joins(term)
          .group("#{term.to_s.pluralize}.name").sum(:magnitude).sort{|(k,v),(j,u)| u<=>v} %>
      <%= chart_or_banner term_data, pie_chart(term_data,
                                               library: PainTracker::PIE_CHART_NO_LEGEND)%>
    </div>
<% end %>